=QIF=

'''Version:''' 0.1

'''Author:''' Bryce Campbell

'''Copyright:''' 2022

'''License:''' See LICENSE

'''Description:''' Library that can read and write QIF files.

==Notes==

This project was created with the aim to be able to allow users 
to import QIF files into 
<a href="https://github.com/bryceac/BCheckbook">BCheckbook</a>, 
so that data can be migrated easily.

===Limits===

At this time, only one section is supported, which can only be a noninvestment type.

This is by design, 
as this library is mainly meant 
for importing QIF files 
into an application that supports only one account and 
only deals with simple logging, 
though it is possible to produce QIF files using this library too.

Not only are only nonivestment sections supported, 
but splits are not supported either.

While the Quicken Interchange format supports splits, 
the program this library is meant for does not, so it has been left out.

If I see a need to support splits in the future, I might add it, 
but they are not a priority.

===Usage===

To make use of this package, add it to the <strong>Package.swift</strong> file like this:

<pre>
dependencies: [
    // Dependencies declare other packages that this package depends on.
    // .package(url: /* package url */, from: "1.0.0"),
    .package(url: "https://github.com/bryceac/QIF", branch: "main")
]
</pre>

This adds the current state of the package to your project, 
though using a tagged version is a better idea.

After that, you just need to do something like this to read a QIF file;

<pre>
import Foundation

let DOCUMENTS_DIRECTORY = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask).first!

let TEST_FILE = DOCUMENTS_DIRECTORY.appendingPathComponent("test").appendingPathExtension("qif")

if let qif = try? QIF.load(from: TEST_FILE) {
    for transaction in qif.transactions {
        print(transaction.amount)
    }
}
</pre>

That will display all the transaction amounts found in the QIF file

Since I only needed single entry components for importing, 
the transactions property is a set, 
which is used to make sure there are no duplicates.

===Contributing===

If you would like to help make this project even better, 
feel free to create a fork and issue a pull request. 
All code submitted be licensed under the same as license as 
this project.

===Support===

If you have troubles with this library, 
contact me at the following address:

tonyhawk2100@gmail.com

While I am not too familiar with QIF or even all variants of it, 
I will try my best to help out, but I have my limits, 
since information is quite limited.

===Other===

This library has been tested on macOS 12 with a QIF file 
generated from Gnu Cash using <a href="https://gnucashtoqif.us/">GnuCashToQIF</a> 
version 1.7 into a Quicken 2003 compatible QIF file, 
though QIF files generated from this library 
might not be compatible with that version of Quicken.

It <strong>should</strong> work on other platforms without modifications, 
but I am not ertain of that.